public class Solution {
    public List<String> readBinaryWatch(int num) {
        List<String> res = new ArrayList<>();
        int[] nums1 = new int[]{8,4,2,1}, nums2 = new int[]{32, 16, 8, 4, 2, 1};
        for(int i=0; i<=num; i++){
            List<Integer> list1 = generateDigit(nums1, i);
            List<Integer> list2 = generateDigit(nums2, num-i);
            for(int num1:list1){
                if(num1>=12) continue;
                for(int num2:list2){
                    if(num2>=60) continue;
                    res.add(num1+":"+(num2<10?"0"+num2:num2));
                }
            }
        }
        return res;
    }
    public List<Integer> generateDigit(int[] nums, int count){
        List<Integer> res = new ArrayList<Integer>();
        helper(res, nums, count, 0, 0);
        return res;
    }
    public void helper(List<Integer> res, int[] nums, int count, int pos, int sum){
        if(count==0){
            res.add(sum);
            return;
        }
        for(int i=pos; i<nums.length; i++){
            helper(res, nums, count-1, i+1, sum+nums[i]);
        }
    }
}
