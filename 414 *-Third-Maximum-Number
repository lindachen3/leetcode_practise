public class Solution {
    public int thirdMax(int[] nums) {
        int max=nums[0];
        for(int i=0; i<nums.length; i++){
            if(nums[i]>max){
                max=nums[i];
            }
        }
        if(nums.length<=2){
            return max;
        }
        int secondmax=Integer.MIN_VALUE;
        for(int i=0; i<nums.length; i++){
            if(nums[i]>=secondmax && nums[i]!=max){
                secondmax=nums[i];
            }
        }

        int thirdmax=Integer.MIN_VALUE;
        boolean is=false;
        for(int i=0; i<nums.length; i++){
            if(nums[i]>=thirdmax && nums[i]!=max && nums[i]!=secondmax){
                thirdmax=nums[i];
                is=true;
            } 
        }
        if(!is){
            return max;
        }
        return thirdmax;
    }
}

//Approach 2
public class Solution {
    public int thirdMax(int[] nums) {
        Integer max1=null, max2=null, max3=null;
        for(Integer num:nums){
            if(num.equals(max1) || num.equals(max2) || num.equals(max3))
                continue;
            if(max1==null || num>max1){
                max3=max2;
                max2=max1;
                max1=num;
            }else if(max2==null || num>max2){
                max3=max2;
                max2=num;
            }else if(max3==null || num>max3){
                max3=num;
            }
        }
        return max3==null?max1:max3;
    }
}
