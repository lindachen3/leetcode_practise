public class Solution {
    public String frequencySort(String s) {
        HashMap<Character, Integer> mymap = new HashMap<Character, Integer>();
        for(int i=0; i<s.length(); i++){
            if(mymap.containsKey(s.charAt(i))){
                mymap.put(s.charAt(i),mymap.get(s.charAt(i))+1);    
            }else{
                mymap.put(s.charAt(i),1);
            }
        }
        List<Character>[] bucket = new List[s.length()+1];
        for(Character c:mymap.keySet()){
            int frequency = mymap.get(c);
            if(bucket[frequency]==null)
                bucket[frequency] = new ArrayList<Character>();
            bucket[frequency].add(c);
        }
        StringBuilder sb=new StringBuilder();
        for(int i=bucket.length-1; i>0; i--){
            if(bucket[i]!=null){
                for(char c:bucket[i]){
                    for(int j=0; j<mymap.get(c);j++){
                        sb.append(c);
                    }
                }
            }
        }
        return sb.toString();
    }
}

//2nd round

public class Solution {
    public String frequencySort(String s) {
        Map<Character, Integer> mymap = new HashMap<>();
        for(int i=0; i<s.length(); i++){
            char c=s.charAt(i);
            if(mymap.containsKey(c)){
                mymap.put(c, mymap.get(c)+1);
            }else{
                mymap.put(c, 1);
            }
        }
        PriorityQueue<Map.Entry<Character, Integer>> queue = new PriorityQueue<>(
            new Comparator<Map.Entry<Character, Integer>>(){
                @Override
                public int compare(Map.Entry<Character, Integer> a, Map.Entry<Character, Integer> b){
                    return b.getValue()-a.getValue();
                }
            }
        );
        queue.addAll(mymap.entrySet());
        StringBuilder sb = new StringBuilder();
        while(!queue.isEmpty()){
            Map.Entry e=queue.poll();
            for(int i=0; i<(int)e.getValue(); i++){
                sb.append(e.getKey());
            }
        }
        return sb.toString();
    }
}
