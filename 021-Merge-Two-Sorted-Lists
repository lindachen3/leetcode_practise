/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 //建一个pseudo node跟踪head
 
public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        
        ListNode head = new ListNode(0);
        ListNode current = head;
        /*
        if(l1 == null && l2 == null){
            return null;
        }*/
        while(l1!=null && l2!=null){
            if(l1.val > l2.val){
                current.next = l2;
                l2=l2.next;
            }
            else {
                current.next = l1;
                l1 = l1.next;
            }
            current = current.next;
        }
        if(l1 == null){
            while(l2 != null){
                current.next = l2;
                l2 = l2.next;
                current = current.next;
            }
        }
        if(l2 == null){
            while(l1 != null){
                current.next = l1;
                l1 = l1.next;
                current = current.next;
            }
        }
        return head.next;
    }
}

    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1 == null){
            return l2;
        }
        if(l2 == null){
            return l1;
        }
        
        ListNode mergeHead;
        if(l1.val < l2.val){
            mergeHead = l1;
            mergeHead.next = mergeTwoLists(l1.next, l2);
        }
        else{
            mergeHead = l2;
            mergeHead.next = mergeTwoLists(l1, l2.next);
        }
        return mergeHead;
    }
