/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode reverseList(ListNode head) {
        if(head==null){
            return null;
        }
        if (head.next == null){
            return head;
        }
        ListNode p = head.next;
        ListNode q = head.next.next;
        p.next = head;
        head.next = null;
        if(q==null){
            return p;    
        }
        while(q.next!=null){
            ListNode temp = q.next;
            q.next = p;
            p = q;
            q = temp;
        }  
        if(q.next == null){
            q.next = p;
        }
        return q;
    }
}


//Approach 2

if(head==null){
    return null;
}

prev = head;
p = head->next;
head->next = null;

while(p != null)
{
Node q = p->next;
p->next = prev;
prev = p;
p = q;
}

return prev;

//2nd round
    public ListNode reverseList(ListNode head) {
        if(head==null)  
            return head;
        ListNode prev = null;
        ListNode temp = head.next;
        while(temp!=null){
            head.next=prev;
            prev=head;
            head=temp;
            
            if(temp!=null){
                temp=temp.next;
            }
        }
        head.next=prev;
        return head;
    }
