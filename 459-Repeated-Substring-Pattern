public class Solution {
    public boolean repeatedSubstringPattern(String str) {
        int strlen = str.length();
        boolean result = false;
        if(str==null||strlen<2){
            return false;
        }
        for(int i=1; i<=strlen/2; i++){  //i表示分段长度
            if(strlen % i == 0){
                String regex = "(" + str.substring(0, i) +")" +"+";
                result = result|str.matches(regex);
            }
        }
        return result;
    }
}


//Approach 2
public class Solution {
    public boolean repeatedSubstringPattern(String s) {
        if(s==null||s.length()<=1)
            return false;
        int len=s.length();
        for(int i=len/2; i>=1; i--){
            if(len%i==0){
                int m=len/i;
                int j;
                for(j=1; j<m; j++){
                    if(!s.substring(0, i).equals(s.substring(j*i, j*i+i))){
                        break;
                    }
                    if(j==m){
                        return true;
                    }
                }
            }
        }
        return false;
    }
}
