public class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int n = nums.length; 
        int res = 0; 
        if (n <= 3) {
            for (int num:nums) 
                res += num; 
            return res; 
        }
        res=nums[0]+nums[1]+nums[2];
        if(res==target) return res; 
        for(int i=0; i<n-2; i++){
            int lo=i+1, hi=n-1;
            while(lo<hi){
                int sum=nums[i]+nums[lo]+nums[hi];
                if(sum==target) return sum; 
                if(Math.abs(sum-target)<Math.abs(res-target)){
                    res=sum;
                }
                if(sum>target){hi--;}
                else if(sum<target){lo++;}
            }
        }
        return res;
    }
}

//2nd round

public class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int ans=nums[0]+nums[1]+nums[2];
        
        for(int i=0; i<nums.length-2; i++){
            int lo=i+1;
            int hi=nums.length-1;
            while(lo<hi){
                int sum=nums[i]+nums[lo]+nums[hi];
                if(sum==target){
                    return target;
                }else if(sum < target){
                    lo++;
                    while(lo<hi && nums[lo]==nums[lo-1]){
                        lo++;
                    }
                }else{
                    hi--;
                    while(lo<hi && nums[hi]==nums[hi+1]){
                        hi--;
                    }
                }
                if(Math.abs(sum-target)<Math.abs(ans-target)){
                    ans=sum;
                }
            }
        }
        return ans;
    }
}
