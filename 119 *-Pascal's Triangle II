// 只用一行的空间来存储结果而不需要额外的来存储上一行呢？可以。
// 从后往前扫，这样每次需要的数据就是res[i]+res[i-1]，就需要的数据不会被覆盖。
// 因为需要的res[i]只在当前步用，下一步就不需要了。这个技巧在动态规划省空间时也经常使用。

public class Solution {
    public List<Integer> getRow(int rowIndex) {
        List<Integer> result = new ArrayList<Integer>();
        if(rowIndex<0) return result;
        result.add(1);
        for(int i=1; i<=rowIndex; i++){
            for(int j=result.size()-1; j>=1; j--){
                result.set(j, result.get(j)+result.get(j-1));
            }
            result.add(1);
        }
        return result;
    }
}
