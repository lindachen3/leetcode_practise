/*public class Solution {
    public int shortestWordDistance(String[] words, String word1, String word2) {
        int pos1=-1, pos2=-1, min=Integer.MAX_VALUE;
        for(int i=0; i<words.length; i++){
            if(!word1.equals(word2)){
                if(words[i].equals(word1)){
                    pos1=i;
                    if(pos2!=-1){
                        min=Math.min(min, Math.abs(pos1-pos2));
                    }
                }
                if(words[i].equals(word2)){
                    pos2=i;
                    if(pos1!=-1){
                        min=Math.min(min, Math.abs(pos1-pos2));
                    }
                }
            }
            if(word1.equals(word2)){
                if(words[i].equals(word1)){
                    if(pos1!=-1) min=Math.min(min,i-pos1);
                    pos1=i;
                }
            }
        }
        return min;
    }
}*/

public int shortestWordDistance(String[] words, String word1, String word2) {
    long dist = Integer.MAX_VALUE, i1 = dist, i2 = -dist;
    for (int i=0; i<words.length; i++) {
        if (words[i].equals(word1))
            i1 = i;
        if (words[i].equals(word2)) {
            if (word1.equals(word2))
                i1 = i2;
            i2 = i;
        }
        dist = Math.min(dist, Math.abs(i1 - i2));
    }
    return (int) dist;
}
/*
public class Solution {
    public int shortestWordDistance(String[] words, String word1, String word2) {
        int min=words.length, pos1=-1, pos2=-1;
        for(int i=0; i<words.length; i++){
            if(words[i].equals(word1)){
                pos1=i;
            }
            else if(words[i].equals(word2)){
                pos2=i;
            } else{
                continue;
            }
            if(pos1!=-1 && pos2!=-1) min=Math.min(min, Math.abs(pos1-pos2));
            if(word1.equals(word2)){
                pos2=pos1;
            }
        }
        return min;
    }
}*/

public class Solution {
    public int shortestWordDistance(String[] words, String word1, String word2) {
        int mindist=Integer.MAX_VALUE;
        boolean flag=word1.equals(word2);
        int temp1=Integer.MIN_VALUE;
        int temp2=Integer.MIN_VALUE;
        for(int i=0; i<words.length; i++){
            
            if(words[i].equals(word1)){
                if(flag){
                    temp2=temp1;
                    temp1=i;
                }else{
                    temp1=i;
                }
            }
            else if(words[i].equals(word2)){
                temp2=i;
            }
            if(temp1 != Integer.MIN_VALUE && temp2 != Integer.MIN_VALUE){
                mindist=Math.min(mindist, Math.abs(temp1-temp2));
            }
        }
        return mindist;
    }
}
