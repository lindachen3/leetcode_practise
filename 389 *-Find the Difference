//hashtable是自己写出来的，但是太慢了。应该用bit manipulation

public class Solution {
    public char findTheDifference(String s, String t) {
        HashMap<Character, Integer> mymap = new HashMap<Character, Integer>();
        for(int i=0; i<s.length(); i++){
            char c=s.charAt(i);
            if(mymap.containsKey(c)){
                mymap.put(c, mymap.get(c)+1);
            }else{
                mymap.put(c,1);
            }
        }
        for(int j=0; j<t.length(); j++){
            char c=t.charAt(j);
            if(!mymap.containsKey(c)){
                return c;
            }else{
                if(mymap.get(c)>1){
                    mymap.put(c,mymap.get(c)-1);
                }else if(mymap.get(c)==1){
                    mymap.remove(c);
                }
            }
        }
        char c='a';
        for(Character word:mymap.keySet()){
            c= word;
        }
        return c;
    }
}

//Approach2: bit manipulation

public class Solution {
    public char findTheDifference(String s, String t) {
      char c=t.charAt(t.length()-1);
      for(int i=0; i<s.length(); i++){
        c^=s.charAt(i);
        c^=t.charAt(i);
      }
      return c;
    }
}
