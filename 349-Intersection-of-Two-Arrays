public class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        ArrayList<Integer> numbers = new ArrayList<Integer>();
        for(int i=0; i< nums1.length; i++){
            if(numbers.indexOf(nums1[i]) != -1)
                continue;
            else{
                for(int j=0; j<nums2.length; j++){
                    if(nums2[j] == nums1[i]){
                        numbers.add(Integer.valueOf(nums1[i]));
                        break;
                    }
                }
            }
        }
        int[] result = new int[numbers.size()];
        for(int k=0; k<numbers.size(); k++){
            result[k] = numbers.get(k);
        }
        return result;
    }
}

//2nd round
public class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set<Integer> set = new HashSet<>();
        Set<Integer> intersect = new HashSet<>();
        for(int n:nums1){
            set.add(n);
        }
        for(int n2:nums2){
            if(set.contains(n2))
                intersect.add(n2);
        }
        int[] ans = new int[intersect.size()];
        int i=0;
        for(Integer k:intersect){
            ans[i++]=k;
        }
        return ans;
    }
}
