/* （1）对于 HashMap 来说，不可以一边使用 KeySet() 访问所有key，一边删除某个key
   （2）判断两个HashMap，其实只需要建立一个HashMap，另一个通过逐个删除就可以判断 */
   
import java.util.*;

public class Solution {
/* Approach 1 */
    public static boolean isAnagram(String s, String t) {
        HashMap<Character, Integer> freq = new HashMap<>();
        for(int i=0; i<s.length(); i++){
            char letter = s.charAt(i);
            if(freq.containsKey(letter))
                freq.put(letter,freq.get(letter)+1);
            else
                freq.put(letter,1);
        }

        for(int j=0; j<t.length(); j++){
            char letter2 = t.charAt(j);
            if(freq.containsKey(letter2)){
            	int num = freq.get(letter2)-1;
            	if(num == 0) 
            		freq.remove(letter2);
            	else
            		freq.put(letter2,freq.get(letter2)-1);
            }
            else
                return false;
        }

        if(freq.size()!=0)
        	return false;
        return true;
    }
    
/* Approach 2 */
    public static boolean isAnagram(String s, String t) {
    	char[] s_arr = s.toCharArray();
    	char[] t_arr = t.toCharArray();
    	Arrays.sort(s_arr);
    	Arrays.sort(t_arr);
    	if(s.length() != t.length()){
    		return false;
    	}
    	for(int i=0; i<s.length(); i++){
    		if(s_arr[i] != t_arr[i]){
    			return false;
    		}
    	}
    	return true;
    }
}
