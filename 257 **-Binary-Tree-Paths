/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    public List<String> result = new ArrayList<String>();
    
    public List<String> binaryTreePaths(TreeNode root) {
        if(root == null){
            return result;
        }
        findPath(root, root.val+"");
        return result;
    }
    public void findPath(TreeNode node, String path){
        if(node.left == null && node.right == null){
            result.add(path);
        }
        if(node.left!=null){
            findPath(node.left, path + "->" +node.left.val);
        }
        if(node.right!=null){
            findPath(node.right, path + "->" +node.right.val);
        }
    }
}
