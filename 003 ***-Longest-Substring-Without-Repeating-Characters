/*
（1）在HashMap中删除重复元素前面的字符信息
（2）i是起点，j是终点，所以不能再加1
*/
public class Solution {
    public static int lengthOfLongestSubstring(String s) {
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        int i=0;
        int maxlen = 0;
        if(s.length() == 1){
            return 1;
        }
        if(s.length()==0){
            return 0;
        }
        for(int j=0; j<s.length(); j++){
            if(map.containsKey(s.charAt(j))){
                maxlen = Math.max(maxlen, j-i);
                for(int k=i; k<map.get(s.charAt(j));k++){
                    map.remove(s.charAt(k));
                }
                i=map.get(s.charAt(j))+1;
                map.put(s.charAt(j),j);
            }
            else{
                map.put(s.charAt(j),j);
            }
        }
        maxlen = Math.max(maxlen, s.length()-i);
        return maxlen;
    }
}
