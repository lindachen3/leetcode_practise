public class WordDistance {
    
    private HashMap<String, List<Integer>> mymap;
    public WordDistance(String[] words) {
        mymap = new HashMap<String, List<Integer>>();
        for(int i=0; i<words.length; i++){
            if(mymap.containsKey(words[i])){
                mymap.get(words[i]).add(i);
            }else{
                mymap.put(words[i], new ArrayList<Integer>());
                mymap.get(words[i]).add(i);
            }
        }
    }
    
    public int shortest(String word1, String word2) {
        List<Integer> list1 = mymap.get(word1);
        List<Integer> list2 = mymap.get(word2);
        int min = Integer.MAX_VALUE;
        for(int i=0, j=0; i<list1.size() && j<list2.size();){
            int index1 = list1.get(i);
            int index2 = list2.get(j);
            if(index1<index2){
                min=Math.min(min, index2-index1);
                i++;
            }else{
                min=Math.min(min, index1-index2);
                j++;
            }
        }
        return min;
    }
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(words);
 * int param_1 = obj.shortest(word1,word2);
 */
