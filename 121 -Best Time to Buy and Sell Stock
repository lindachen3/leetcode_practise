public class Solution {
    public int maxProfit(int[] prices) {
        int n=prices.length;
        if(n==0) return 0;
        int max=0;
        int min=prices[0];
        for(int i=1; i<n; i++){
            min=Math.min(prices[i],min);
            max=Math.max(prices[i]-min, max);
        }
        return max;
    }
}

//2nd round
public class Solution {
    public int maxProfit(int[] prices) {
        if(prices==null || prices.length==0)  return 0;
        int profit=0;
        int temp=prices[0];
        for(int i=1; i<prices.length; i++){
            if(prices[i]>temp){
                profit=Math.max(profit, prices[i]-temp);
            }
            temp=Math.min(temp, prices[i]);
        }   
        return profit;
    }
}
